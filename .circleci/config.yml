version: 2.1


parameters:
  full_plan_apply: 
    type: string
    default: ""

orbs:
  aws-cli: circleci/aws-cli@3.1.4
jobs:
  aws-cli-cred-setup: 
    executor: aws-cli/default
    steps: 
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_REGION
  init-and-plan-test:
    docker: 
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps: 
      - checkout
      - run: 
          name: terraform init and plan test env
          command: | 
            cd infrastructure
            terraform init -input=false 
            terraform plan -input=false -var-file=test.tfvars
  apply-test:
    docker: 
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps: 
      - checkout
      - run: 
          name: terraform apply test env
          command: | 
            cd infrastructure
            terraform init -input=false
            terraform apply -input=false -auto-approve -var-file=test.tfvars 
            ls -l
            pwd
            mkdir -p /tmp/workspace
            echo "S3_BUCKET=`terraform output s3_bucket_name | sed s/\\"//g`" > /tmp/workspace/env_vars
            echo "S3_DAG_PATH=`terraform output s3_dag_path | sed s/\\"//g`" >> /tmp/workspace/env_vars
      - persist_to_workspace:
          root: /tmp/workspace
          paths: 
            - env_vars
  update-dags-test:
    executor: aws-cli/default
    steps: 
      - checkout
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_REGION
      - attach_workspace:
          at: /tmp/workspace
      - run: >-
          echo "Hello from AWS"
          source /tmp/workspace/env_vars
          echo "S3: $S3_BUCKET"
          echo "DAG: $S3_DAG_PATH"

workflows: 
  on-merge:
    jobs: 
      - aws-cli-cred-setup:
          filters: 
            branches: 
              only: main
      - init-and-plan-test:
          requires:
            - aws-cli-cred-setup
          filters: 
            branches: 
              only: main
      - apply-test:
          requires:
            - init-and-plan-test
          filters: 
            branches: 
              only: main
      - update-dags-test:
          requires:
            - apply-test
          filters: 
            branches: 
              only: main
